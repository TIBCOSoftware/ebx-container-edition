#
# Copyright Cloud Software Group, Inc. 2000-2023. All rights reserved.
#

# Defines specifics values for an environment (development, qa, production...).
global:
  # ebxImage is the EBX Container Edition image URL
  ebxImage:
  # ebxImageRegistrySecret that contains the credentials used to connect to the registry that hosts the EBX image.
  ebxImageRegistrySecret: "" # (Optional)
  # namespace where the EBX pod will be deployed
  namespace: "ebx"
  # hostname of the kubernetes server host
  hostname: ""

# Defines specific values for the EBX instance
ebx:
  # prefix is the prefix name used for every kubernetes object of the instance (Pod, Service,
  # Ingress...)
  prefix: ""
  # adminLogin is the username used to connect to the EBX instance (default value is admin)
  adminLogin: "admin" # (Ignored if the repository is already initialized)
  # adminPassword is the password used to connect to the EBX instance
  adminPassword: "334242DQ112122" # (Ignored if the repository is already initialized).
  # isSecured if set to "true", the protocol "HTTPS" is assumed. If "false", the protocol "HTTP" is assumed.
  isSecured: "true"
  # flaDisabled is made to activate or not the first-launch assistant (For security reasons, one might want to disable
  # the first-launch assistant in all circumstances.)
  flaDisabled: "true" # (Mandatory on first execution and ignored if the repository is already initialized).
  # restAuthenticationBasic if set to true enable Basic authentication for REST services.
  restAuthenticationBasic: "true"
  # cpu number allocate to the container (default value is 2)
  cpu: 2
  # memory is the container memory limit allocate to the container (default value is 2Gi)
  memory: "2Gi"
  # dataStorageClass used to claim volumes for EBX data
  dataStorageClass: # (will take default storageClass if no value is specified)
  # logsStorageClass used to claim volumes for EBX logs
  logsStorageClass: # (will take default storageClass if no value is specified)
  # dataVolumeStorageClaim is the amount of disk space of the PersistentVolume requested by the EBX
  # instance to store it's data
  dataVolumeStorageClaim: "20Gi"
  # logsVolumeStorageClaim is the amount of disk space requested by the PersistentVolumeClaim for
  # the data of the EBX instance
  logsVolumeStorageClaim: "2Gi"

  # databaseName is the database name
  databaseName:
  # databaseUser is the database user
  databaseUser:
  # databasePwd is the database password
  databasePwd:
  # databaseHost is the database host
  databaseHost:
  # databasePort is the database port
  databasePort:
  # databaseType is the database type (postgresql, sqlserver, oracle etc...)
  databaseType:

  ### SQL databases (the following values will be use only if database.type is equal to sqlserver or azure.sql)

  # databaseEncrypt is a property for JDBC SQL connection (set to true that specify that the SQL Server uses TLS encryption)
  databaseEncrypt: "" # (Optional)
  #  databaseTrustServerCertificate is a property for JDBC SQL connection (set to true that specify that the driver doesn't
  # validate the server TLS/SSL certificate.)
  databaseTrustServerCertificate: "" # (Optional)
  # databaseHostNameInCertificate is the host name to be used to validate the SQL Server TLS/SSL certificate.
  databaseHostNameInCertificate: "" # (Optional)
  # databaseLoginTimeout is the number of seconds the driver should wait before timing out a failed connection
  databaseLoginTimeout: # (Optional)

# Ingress section defines specifics values for traffic routing rules of the Ingress resource
ingress:
  # className is the name of the chosen ingress-controller
  className: "nginx"
  # tlsSecret that contains the self-signed certificate public and private key
  tlsSecret: "" # (Optional)
  # hostRuleDefied modify the syntax of the ingress according to this value. (default value is true)
  # If set to true, an host must be defined.
  hostRuleDefined: "false"
  # annotations to configure the ingress resource
  annotations:
  # pathType is pathType of the ingress.
  pathType: "Prefix"

# Examples section defines values for specifics examples. Please see the example section in the README file.
examples:
  # postgresqlDynamicProvisioningEnable if set to true, will add the ebx-init container and create postgresServer secret.
  # Please see the "EBX with dynamic provisioning of postgresql databases" example in the README file.
  postgresqlDynamicProvisioningEnable: "false" # if set to true the postgresServer values must be defined.

